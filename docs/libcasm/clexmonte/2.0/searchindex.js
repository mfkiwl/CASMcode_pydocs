Search.setIndex({"docnames": ["about", "bibliography", "index", "installation", "reference/libcasm/_autosummary/libcasm.clexmonte", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.check", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.reset", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.methodname", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.append", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.is_complete", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.methodname", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.n_completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.next_state", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.read_completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.write_completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.analysis_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.json_sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_default_sampling_fixture_params", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_sampling_fixture_params_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.modifying_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.name", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.potential", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run_fixture", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.set_state_and_potential", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.state_data", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.system", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.time_sampling_allowed", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.conditions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.configuration", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.properties", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.occ_delta_per_supercell", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_supercell", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_unitcell", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.state_data", "reference/libcasm/_autosummary/libcasm.clexmonte.Results", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.completion_check_results", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.elapsed_clocktime", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampler_names", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_samplers", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_accept", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_reject", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_clocktime", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_count", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_time", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_trajectory", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_weight", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampler_names", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.samplers", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.component_names", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.description", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.function", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.name", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.shape", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.items", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.keys", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.values", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.conditions", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.final_state", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.initial_state", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.n_unitcells", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.transformation_matrix_to_super", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_final_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_initial_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_last_final_state", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.output_dir", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_final_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_initial_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_prim_basis", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.engine", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.global_cutoff", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.run_index", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture_labels", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixtures", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.label", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.results", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.analysis_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.completion_check_params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.converge", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.json_sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.label", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.method_log", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.clex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.corr", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_corr", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.n_unitcells", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.occ_location", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.order_parameter", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.state", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.system", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.transformation_matrix_to_super", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.description", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.function", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.name", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.items", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.keys", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.values", "reference/libcasm/_autosummary/libcasm.clexmonte.System", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.canonical_swaps", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_calculator", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_converter", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_subspace_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_configuration", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_state", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.n_dimensions", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter_subspaces", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim_neighbor_list", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_multiswaps", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_swaps", "reference/libcasm/_autosummary/libcasm.clexmonte.System.species_list", "reference/libcasm/_autosummary/libcasm.clexmonte.System.xtal_prim", "reference/libcasm/_autosummary/libcasm.clexmonte.enforce_composition", "reference/libcasm/_autosummary/libcasm.clexmonte.make_canonical_initial_state", "reference/libcasm/_autosummary/libcasm.clexmonte.make_initial_state", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.optional_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_array_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_int_array_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.scale_supercell", "reference/libcasm/index", "usage", "usage/overview"], "filenames": ["about.rst", "bibliography.rst", "index.rst", "installation.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.check.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.reset.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.methodname.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.append.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.is_complete.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.methodname.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.n_completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.next_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.read_completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.write_completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.analysis_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.json_sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_default_sampling_fixture_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_sampling_fixture_params_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.modifying_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.potential.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run_fixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.set_state_and_potential.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.state_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.system.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.time_sampling_allowed.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.conditions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.configuration.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.properties.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.occ_delta_per_supercell.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_supercell.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_unitcell.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.state_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.completion_check_results.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.elapsed_clocktime.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampler_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_samplers.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_accept.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_reject.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_clocktime.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_count.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_trajectory.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_weight.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampler_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.samplers.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.component_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.description.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.shape.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.items.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.values.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.conditions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.final_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.initial_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.n_unitcells.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.transformation_matrix_to_super.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_final_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_initial_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_last_final_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.output_dir.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_final_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_initial_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_prim_basis.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.engine.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.global_cutoff.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.run_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture_labels.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixtures.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.label.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.results.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.analysis_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.completion_check_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.converge.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.json_sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.label.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.method_log.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.corr.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_corr.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.n_unitcells.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.occ_location.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.order_parameter.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.system.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.transformation_matrix_to_super.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.description.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.items.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.values.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.canonical_swaps.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_calculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_converter.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_subspace_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_configuration.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.n_dimensions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter_subspaces.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim_neighbor_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_multiswaps.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_swaps.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.species_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.xtal_prim.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.enforce_composition.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.make_canonical_initial_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.make_initial_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.optional_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_array_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_int_array_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.scale_supercell.rst", "reference/libcasm/index.rst", "usage.rst", "usage/overview.rst"], "titles": ["About", "Bibliography", "libcasm-clexmonte", "Installation", "libcasm.clexmonte", "FindMinPotentialConfigs", "check", "reset", "FixedConfigGenerator", "from_dict", "methodname", "to_dict", "IncrementalConditionsStateGenerator", "append", "completed_runs", "from_dict", "is_complete", "methodname", "n_completed_runs", "next_state", "read_completed_runs", "to_dict", "write_completed_runs", "MonteCalculator", "analysis_functions", "json_sampling_functions", "make_default_sampling_fixture_params", "make_sampling_fixture_params_from_dict", "modifying_functions", "name", "potential", "run", "run_fixture", "sampling_functions", "set_state_and_potential", "state_data", "system", "time_sampling_allowed", "MonteCarloState", "conditions", "configuration", "from_dict", "properties", "to_dict", "MontePotential", "occ_delta_per_supercell", "per_supercell", "per_unitcell", "state_data", "Results", "analysis", "analysis_functions", "completion_check_results", "elapsed_clocktime", "json_sampler_names", "json_samplers", "json_sampling_functions", "n_accept", "n_reject", "sample_clocktime", "sample_count", "sample_time", "sample_trajectory", "sample_weight", "sampler_names", "samplers", "sampling_functions", "ResultsAnalysisFunction", "component_names", "description", "function", "name", "shape", "ResultsAnalysisFunctionMap", "items", "keys", "values", "RunData", "conditions", "final_state", "from_dict", "initial_state", "n_unitcells", "to_dict", "transformation_matrix_to_super", "RunDataOutputParams", "do_save_all_final_states", "do_save_all_initial_states", "do_save_last_final_state", "from_dict", "output_dir", "to_dict", "write_final_states", "write_initial_states", "write_prim_basis", "RunManager", "engine", "global_cutoff", "run_index", "sampling_fixture", "sampling_fixture_labels", "sampling_fixtures", "SamplingFixture", "label", "params", "results", "SamplingFixtureParams", "analysis_functions", "completion_check_params", "converge", "from_dict", "json_sampling_functions", "label", "method_log", "sampling_functions", "sampling_params", "to_dict", "StateData", "clex", "corr", "local_clex", "local_corr", "local_multiclex", "multiclex", "n_unitcells", "occ_location", "order_parameter", "state", "system", "transformation_matrix_to_super", "StateModifyingFunction", "description", "function", "name", "StateModifyingFunctionMap", "items", "keys", "values", "System", "basis_set", "basis_set_keys", "canonical_swaps", "clex", "clex_keys", "composition_calculator", "composition_converter", "dof_space", "dof_space_keys", "dof_subspace_keys", "from_dict", "is_basis_set", "is_clex", "is_local_basis_set", "is_local_clex", "is_local_multiclex", "is_multiclex", "local_basis_set", "local_basis_set_keys", "local_clex", "local_clex_keys", "local_multiclex", "local_multiclex_keys", "make_default_configuration", "make_default_state", "multiclex", "multiclex_keys", "n_dimensions", "order_parameter", "order_parameter_subspaces", "prim", "prim_neighbor_list", "semigrand_canonical_multiswaps", "semigrand_canonical_swaps", "species_list", "xtal_prim", "enforce_composition", "make_canonical_initial_state", "make_initial_state", "libcasm.clexmonte.parsing", "optional_from_dict", "required_array_from_dict", "required_from_dict", "required_int_array_from_dict", "to_dict", "scale_supercell", "Reference (libcasm)", "Usage", "Overview"], "terms": {"libcasm": [0, 5, 6, 8, 12, 23, 25, 33, 38, 44, 49, 52, 55, 56, 66, 67, 73, 74, 75, 76, 77, 85, 95, 102, 106, 117, 130, 132, 134, 135, 136, 137, 138, 141, 142, 158, 160, 164, 167, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187], "clexmont": [0, 5, 8, 12, 23, 38, 44, 49, 67, 73, 77, 85, 95, 102, 106, 117, 130, 132, 134, 138, 142, 158, 160, 164, 167, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187], "i": [0, 2, 6, 8, 12, 15, 20, 23, 26, 31, 32, 34, 38, 43, 67, 68, 73, 77, 83, 85, 88, 95, 97, 106, 109, 117, 130, 132, 134, 138, 168, 175, 176, 177, 184, 187], "part": [0, 2], "casm": [0, 4, 142, 158, 160, 163, 164, 167, 187], "project": 0, "develop": [0, 2], "van": [0, 2], "der": [0, 2], "ven": [0, 2], "group": [0, 2, 5, 8, 176, 177], "origin": [0, 2], "univers": [0, 2], "michigan": [0, 2], "current": [0, 2, 8, 30, 31, 32, 34, 35, 38, 45, 46, 47, 48, 98, 117, 124, 125, 126, 127, 129, 175], "california": [0, 2], "santa": [0, 2], "barbara": [0, 2], "thi": [0, 2, 12, 15, 37, 187], "packag": [0, 2, 187], "provid": [0, 5, 8, 13, 15, 31, 32, 34, 38, 42, 117, 175, 176, 177, 187], "python": [0, 3, 9, 11, 15, 21, 27, 41, 43, 80, 83, 89, 91, 110, 116, 149], "interfac": [0, 23, 44, 187], "librari": 0, "learn": 0, "more": [0, 2, 12, 95, 187], "here": [0, 176, 177], "The": [2, 6, 8, 9, 11, 12, 14, 15, 19, 21, 23, 26, 30, 31, 32, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 47, 54, 64, 70, 83, 84, 106, 109, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 138, 139, 141, 142, 146, 156, 158, 160, 162, 163, 164, 167, 168, 171, 172, 175, 176, 177, 184, 187], "cluster": [2, 4, 23, 26, 38, 117, 118, 120, 122, 123, 138, 139, 142, 143, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 170, 187], "expans": [2, 4, 23, 26, 38, 117, 118, 120, 122, 123, 138, 139, 142, 143, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 170, 187], "mont": [2, 4, 5, 8, 12, 23, 25, 26, 33, 38, 42, 44, 49, 52, 55, 56, 66, 74, 75, 76, 77, 79, 81, 82, 84, 95, 102, 106, 110, 117, 130, 132, 135, 136, 137, 141, 142, 158, 160, 163, 164, 167, 171, 172, 176, 177, 186], "carlo": [2, 4, 5, 8, 12, 23, 26, 38, 42, 44, 49, 77, 79, 81, 82, 84, 95, 102, 106, 110, 117, 141, 171, 172, 176, 177, 186], "includ": [2, 23, 26, 77, 85, 149, 173, 176, 187], "canon": [2, 23, 26, 141, 171, 172, 175, 176, 177, 187], "semi": [2, 23, 26, 171, 172, 175], "grand": [2, 23, 26, 171, 172, 175], "calcul": [2, 5, 23, 26, 29, 30, 34, 37, 38, 42, 44, 45, 46, 47, 48, 67, 110, 118, 119, 120, 121, 122, 123, 126, 130, 138, 139, 142, 144, 146, 150, 152, 156, 158, 160, 164, 167, 175, 176, 177, 187], "kinet": [2, 23, 26, 138, 166, 187], "n": [2, 26, 67, 68, 72, 175], "fold": 2, "wai": 2, "composit": [2, 23, 26, 130, 138, 144, 145, 175, 176, 187], "order": [2, 23, 26, 41, 67, 68, 126, 138, 146, 167, 168, 187], "paramet": [2, 5, 6, 8, 12, 13, 15, 23, 26, 27, 31, 32, 34, 38, 41, 43, 44, 45, 49, 67, 77, 83, 85, 95, 99, 102, 104, 106, 108, 109, 110, 115, 117, 118, 119, 120, 121, 122, 123, 126, 130, 132, 138, 139, 142, 146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 163, 164, 167, 168, 175, 176, 177, 184, 187], "constrain": [2, 23], "sq": 2, "gener": [2, 8, 12, 15, 31, 32, 85, 86, 87, 88, 95, 102, 175, 176, 177, 186], "open": 2, "sourc": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 77, 80, 83, 85, 89, 91, 176, 177, 179, 180, 181, 182, 183, 184], "softwar": 2, "which": [2, 8, 12, 26, 41, 44, 106, 175, 176, 177, 184, 187], "design": 2, "perform": [2, 31, 32, 176, 187], "first": [2, 6, 12, 176, 177, 184], "principl": 2, "statist": 2, "mechan": 2, "studi": 2, "multi": [2, 26, 122, 123, 154, 155, 160, 161, 164, 165, 171], "compon": [2, 67, 68, 109, 162, 163], "crystallin": 2, "solid": 2, "For": [2, 41, 43, 187], "inform": [2, 26, 106, 169], "see": [2, 3, 23, 41, 43], "homepag": 2, "gnu": 2, "lesser": 2, "public": 2, "lgpl": 2, "pleas": 2, "file": [2, 20, 26, 85, 88, 106, 113, 149, 187], "avail": 2, "github": 2, "instal": 2, "usag": [2, 85, 88, 130], "overview": [2, 186], "refer": [2, 43, 149], "bibliographi": 2, "todo": [3, 23, 41, 43, 187], "casmcode_crystallographi": 3, "doc": 3, "rst": 3, "similar": 3, "instruct": 3, "function": [4, 12, 15, 24, 25, 26, 28, 33, 38, 50, 51, 54, 56, 64, 66, 67, 69, 71, 106, 107, 109, 110, 111, 114, 130, 131, 133, 175, 176, 178, 187], "class": [4, 5, 8, 12, 23, 38, 44, 49, 67, 73, 77, 85, 95, 102, 106, 117, 130, 134, 138, 187], "modul": 4, "montecalcul": [5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 130, 176, 177, 186], "condit": [5, 8, 12, 23, 38, 163, 176, 177, 187], "valuemap": [5, 12, 38, 39, 42, 78, 176, 177, 187], "transformation_matrix_to_sup": [5, 162, 163, 176, 177, 184], "ndarrai": [5, 50, 67, 84, 124, 129, 162, 163, 175, 176, 177, 184], "none": [5, 8, 12, 15, 20, 23, 26, 31, 32, 34, 38, 67, 77, 85, 90, 106, 109, 117, 125, 130, 175, 176, 177, 179], "isotropic_potenti": [5, 176, 177], "bool": [5, 12, 16, 26, 37, 43, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 106, 110, 150, 151, 152, 153, 154, 155, 176, 177, 183], "true": [5, 12, 26, 37, 43, 83, 85, 95, 97, 106, 150, 151, 152, 153, 154, 155, 176, 177], "tol": [5, 176, 177], "float": [5, 6, 26, 45, 46, 47, 53, 59, 61, 63, 106, 109, 176, 177], "1e": [5, 176, 177], "05": [5, 176, 177], "base": [5, 8, 12, 23, 37, 38, 44, 49, 67, 73, 77, 85, 95, 102, 106, 110, 117, 130, 134, 138], "object": [5, 8, 12, 41, 43, 73, 77, 85, 134], "find": [5, 175, 176, 177, 187], "minimum": [5, 6, 26, 106, 176, 177, 184, 187], "potenti": [5, 6, 23, 26, 34, 44, 45, 46, 47, 117, 176, 177, 187], "configur": [5, 6, 8, 12, 38, 62, 83, 130, 132, 142, 158, 160, 162, 163, 164, 167, 176, 177, 187], "constructor": [5, 8, 12, 13, 23, 38, 44, 49, 67, 77, 85, 95, 102, 106, 117, 130, 138, 187], "A": [5, 8, 12, 15, 32, 41, 67, 68, 70, 102, 130, 132, 138, 140, 143, 147, 148, 149, 157, 159, 161, 162, 163, 165, 176, 177, 184, 187], "access": [5, 104, 105, 117, 176, 177], "union": [5, 6, 12, 38, 176, 177], "dict": [5, 9, 11, 12, 15, 21, 23, 27, 38, 41, 43, 50, 73, 80, 83, 89, 91, 110, 116, 134, 149, 176, 177, 179, 180, 181, 182, 183], "thermodynam": [5, 12, 38, 39, 78, 176, 177, 187], "option": [5, 8, 23, 26, 31, 32, 34, 53, 67, 77, 79, 81, 85, 90, 106, 109, 117, 125, 127, 130, 132, 175, 176, 177, 179, 180, 181, 182, 183, 187], "np": [5, 50, 84, 124, 129, 175, 176, 177], "If": [5, 6, 8, 12, 26, 31, 32, 34, 38, 43, 67, 68, 83, 95, 97, 106, 109, 117, 175, 176, 177, 187], "onli": [5, 26, 106, 109, 176, 177, 187], "tile": [5, 8, 176, 177], "correspond": [5, 176, 177, 184], "supercel": [5, 6, 8, 9, 15, 41, 45, 46, 80, 82, 84, 124, 129, 162, 163, 176, 177, 184, 187], "consid": [5, 176, 177], "search": [5, 149, 176, 177], "assum": [5, 176, 177], "orient": [5, 173, 176, 177], "doe": [5, 20, 176, 177], "matter": [5, 8, 176, 177], "fals": [5, 26, 37, 43, 83, 85, 88, 91, 106, 176, 177, 183], "appli": [5, 8, 12, 15, 175, 176, 177], "prim": [5, 43, 83, 85, 94, 138, 162, 163, 174, 176, 177, 184, 187], "factor": [5, 8, 176, 177], "check": [5, 16, 26, 52, 95, 102, 106, 108, 150, 151, 152, 153, 154, 155, 176, 177, 187], "all": [5, 16, 26, 51, 85, 86, 87, 95, 97, 106, 109, 110, 162, 163, 173, 176, 177, 187], "possibl": [5, 34, 106, 110, 176, 177], "casmglob": 5, "toler": [5, 176, 177], "identifi": [5, 176, 177], "approxim": [5, 6, 176, 177], "equal": [5, 176, 177, 184], "method": [5, 8, 12, 23, 34, 38, 42, 44, 49, 67, 73, 77, 85, 95, 102, 106, 117, 130, 134, 138, 175, 176, 177, 187], "findminpotentialconfig": [6, 7], "iter": [6, 177], "configurationset": [6, 177], "note": [6, 8, 13, 20, 22, 26, 34, 41, 43, 73, 134, 176, 177], "result": [6, 7, 24, 26, 31, 32, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 102, 106, 107, 110, 176, 177, 184, 187], "empti": [6, 38, 61, 62, 63, 163, 171, 172], "input": [6, 23, 31, 32, 34, 110, 117, 138, 176, 187], "fit": 6, "request": [6, 16, 62, 109, 187], "an": [6, 26, 32, 38, 67, 68, 70, 126, 130, 132, 144, 146, 167, 175, 176, 177, 187], "except": 6, "rais": [6, 175], "1": [6, 26, 67, 68, 175], "equival": [6, 177], "one": [6, 12, 23, 32, 49, 95, 177, 187], "encount": [6, 23], "return": [6, 8, 9, 11, 12, 15, 18, 19, 21, 26, 27, 31, 32, 41, 43, 45, 46, 47, 67, 70, 83, 99, 109, 110, 116, 118, 119, 120, 121, 122, 123, 126, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 171, 172, 175, 176, 177, 184, 187], "candid": [6, 177], "must": [6, 12, 54, 64, 95, 97, 109, 176, 177, 187], "list": [6, 12, 14, 31, 32, 34, 45, 52, 54, 59, 60, 61, 62, 63, 64, 67, 68, 72, 85, 86, 87, 88, 95, 100, 101, 102, 106, 109, 117, 125, 138, 140, 141, 143, 147, 148, 149, 157, 159, 161, 165, 168, 170, 171, 172, 173, 175, 177, 187], "id": [6, 177], "int": [6, 12, 18, 45, 57, 58, 60, 67, 72, 82, 98, 109, 138, 162, 163, 166, 168, 176, 177, 184], "str": [6, 10, 12, 15, 17, 23, 26, 27, 29, 50, 54, 64, 67, 68, 69, 71, 73, 85, 90, 99, 100, 103, 106, 109, 110, 112, 118, 119, 120, 121, 122, 123, 126, 130, 131, 133, 134, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 176, 177, 179, 180, 181, 182, 183, 184], "configuration_nam": [6, 177], "indic": [6, 8, 45, 67, 68, 109, 162, 163, 168], "sequenc": [6, 177], "valu": [6, 23, 26, 43, 45, 46, 47, 85, 94, 162, 163, 183, 187], "per": [6, 26, 45, 46, 47, 145, 175], "unit": [6, 47, 145, 162, 163, 175, 176, 177, 184], "cell": [6, 47, 82, 84, 145, 175, 176, 177, 184], "type": [6, 9, 11, 15, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184], "store": [7, 34, 73, 77, 85, 117, 134, 138, 187], "motif": [8, 176, 177, 187], "configgener": 8, "state": [8, 12, 13, 15, 19, 23, 26, 28, 30, 31, 32, 34, 35, 38, 41, 42, 44, 45, 46, 47, 48, 56, 66, 77, 79, 81, 83, 85, 86, 87, 88, 92, 93, 94, 106, 109, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 142, 158, 160, 163, 164, 167, 175, 176, 177, 187], "alwai": [8, 12], "same": [8, 109, 177], "what": [8, 23, 95, 102, 106], "complet": [8, 12, 13, 14, 16, 18, 20, 22, 26, 52, 85, 86, 87, 88, 95, 97, 102, 106, 108, 187], "run": [8, 12, 13, 14, 16, 18, 20, 22, 23, 26, 32, 34, 67, 77, 85, 86, 87, 88, 95, 97, 98, 102, 106, 117, 130, 175, 186], "ar": [8, 12, 23, 26, 38, 67, 68, 84, 106, 109, 149, 162, 163, 175, 176, 177, 184, 187], "directli": 8, "other": [8, 26, 187], "ignor": 8, "initi": [8, 12, 13, 38, 77, 81, 85, 87, 93, 162, 163, 176, 177, 184, 187], "copi": [8, 38], "perfect": 8, "can": [8, 12, 15, 67, 68, 130, 175, 176, 177, 184, 187], "made": [8, 177], "oper": [8, 130, 187], "print": [8, 177], "warn": [8, 177], "us": [8, 12, 15, 26, 31, 32, 34, 38, 43, 67, 77, 83, 85, 94, 106, 117, 130, 138, 166, 170, 175, 176, 177, 187], "without": 8, "reorient": 8, "fill": [8, 176, 177, 187], "imperfectli": 8, "given": [8, 63, 95, 177, 187], "default": [8, 26, 43, 83, 85, 109, 162, 163, 176, 177], "static": [9, 10, 15, 17, 41, 80, 89, 110, 149], "fixedconfiggener": [9, 10, 11, 12], "data": [9, 11, 12, 13, 15, 20, 21, 22, 23, 27, 35, 36, 41, 43, 48, 49, 55, 65, 67, 77, 80, 83, 85, 89, 102, 110, 116, 117, 128, 138, 149, 175, 179, 180, 181, 182, 183, 187], "supercellset": [9, 15, 41, 80], "construct": [9, 12, 15, 19, 26, 27, 32, 34, 41, 80, 89, 110, 149, 162, 163, 175, 176, 177, 187], "from": [9, 15, 20, 27, 32, 41, 45, 49, 80, 89, 110, 130, 144, 149, 176, 187], "config_gener": [9, 12], "convert": [11, 21, 83, 91, 145], "output_param": [12, 13, 20, 22], "rundataoutputparam": [12, 86, 87, 88, 89, 90, 91, 92, 93, 94], "initial_condit": 12, "conditions_incr": 12, "n_state": 12, "ani": [12, 95, 97, 179, 181, 183, 187], "dependent_run": 12, "modifi": [12, 15, 28, 130, 132, 175, 176], "tupl": 12, "callabl": [12, 15, 67, 130], "montecarlost": [12, 15, 19, 31, 32, 34, 39, 40, 41, 42, 43, 44, 77, 79, 81, 117, 127, 130, 132, 142, 158, 160, 163, 164, 167, 175, 176, 177, 186], "stategener": 12, "seri": [12, 19, 77, 85, 187], "linear": [12, 45, 187], "path": [12, 26, 106, 149, 187], "space": [12, 187], "control": [12, 85, 187], "save": [12, 23, 85, 86, 87, 88, 90, 92, 93, 94, 187], "write": [12, 22, 26, 43, 83, 85, 92, 93, 94, 106, 187], "At": [12, 187], "least": 12, "final": [12, 13, 77, 79, 85, 86, 88, 92, 187], "enabl": [12, 77, 85, 88, 187], "restart": [12, 77, 85, 88], "depend": [12, 13, 23, 38, 77, 85, 187], "chang": [12, 45], "each": [12, 23, 26, 67, 68, 77, 106, 187], "subsequ": [12, 187], "number": [12, 18, 32, 57, 58, 60, 95, 96, 102, 145, 175, 187], "rundata": [12, 13, 14, 78, 79, 80, 81, 82, 83, 84], "functor": 12, "next": [12, 19, 77, 85, 187], "previous": 12, "usual": 12, "instanc": [12, 138, 187], "previou": [12, 85, 88, 176, 177], "otherwis": [12, 37, 95, 97, 106], "befor": [12, 15], "custom": [12, 15, 23, 187], "constraint": [12, 15], "attribut": [12, 23, 38, 44, 49, 67, 77, 85, 95, 102, 106, 117, 130, 138], "incrementalconditionsstategener": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 77, 85], "run_data": 13, "mai": [13, 26, 38, 61, 62, 63, 125, 171, 172, 177, 187], "eras": 13, "set": [13, 26, 34, 109, 118, 119, 120, 121, 122, 123, 126, 138, 139, 140, 142, 150, 152, 156, 157, 158, 160, 164, 167, 187], "properti": [14, 16, 18, 19, 24, 25, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 96, 97, 98, 100, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 124, 125, 127, 128, 129, 131, 132, 133, 138, 140, 143, 144, 145, 147, 148, 157, 159, 161, 165, 166, 169, 170, 173, 174, 187], "modifying_funct": [15, 130], "name": [15, 23, 54, 64, 67, 68, 73, 109, 112, 118, 119, 120, 121, 122, 123, 126, 130, 134, 139, 142, 146, 150, 151, 152, 153, 154, 155, 156, 158, 160, 164, 167, 168, 176], "state_gener": 15, "have": [16, 163, 176, 177, 184], "been": 16, "read": 20, "output_dir": [20, 22, 26, 85, 106], "completed_run": [20, 22, 85, 90, 92, 93], "json": [20, 22, 23, 25, 26, 27, 38, 41, 43, 54, 55, 56, 85, 90, 92, 93, 106, 110, 111, 116, 149], "skip": 20, "exist": [20, 26, 150, 151, 152, 153, 154, 155], "self": [23, 26, 27, 31, 32, 34, 38, 43, 44, 45, 46, 47, 49, 67, 73, 74, 75, 76, 95, 99, 102, 106, 109, 116, 117, 118, 119, 120, 121, 122, 123, 126, 130, 134, 135, 136, 137, 138, 139, 141, 142, 146, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 163, 164, 167, 168, 171, 172], "system": [23, 117, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186], "param": 23, "pybind11_object": [23, 38, 44, 49, 67, 73, 95, 102, 106, 117, 130, 134, 138], "semigrand_canon": 23, "ensembl": 23, "lte": 23, "low": 23, "temperatur": [23, 187], "flex": 23, "allow": [23, 37, 109, 110, 130, 132, 141, 172, 173, 174, 175], "rang": 23, "varianc": 23, "correl": [23, 26, 119, 121, 187], "match": [23, 99, 109, 176, 187], "model": [23, 38, 117, 138], "requir": [23, 34, 117], "link": 23, "under": [23, 177], "expect": [23, 43], "document": [23, 38, 43], "exampl": 23, "enumer": 23, "dure": [23, 31, 32, 34, 102, 117, 175, 177, 187], "analysi": [24, 26, 51, 71, 106, 107, 110, 133, 187], "resultsanalysisfunctionmap": [24, 51, 74, 75, 76, 106, 107, 110], "sampl": [25, 26, 27, 31, 32, 33, 37, 49, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 95, 97, 99, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 187], "jsonstatesamplingfunctionmap": [25, 56, 106, 110, 111], "label": [26, 27, 99, 100, 106, 110], "write_result": [26, 106], "write_trajectori": [26, 106], "write_observ": [26, 106], "write_statu": [26, 106], "log_fil": [26, 106], "log_frequency_in_": [26, 106], "600": [26, 106], "0": [26, 67, 68, 106, 162, 163], "samplingfixtureparam": [26, 27, 32, 49, 95, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 186], "fixtur": [26, 27, 49, 95, 97, 99, 102, 104, 105, 106, 112, 187], "By": [26, 109], "occur": [26, 59, 60, 61, 62], "linearli": 26, "pass": [26, 60, 187], "period": 26, "clex": 26, "formation_energi": 26, "format": [26, 41, 43, 149], "energi": [26, 187], "unitcel": 26, "mol_composit": [23, 26, 176], "mol": [26, 175], "vec": [26, 175], "param_composit": [23, 26, 176], "parametr": [26, 138, 145], "math": 26, "x": 26, "potential_energi": 26, "order_paramet": 26, "kei": [26, 38, 54, 64, 118, 119, 120, 121, 122, 123, 126, 139, 140, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168], "dof_spac": 26, "subspace_magnitud": 26, "magnitud": 26, "subspac": [26, 148, 168], "dof_subspac": 26, "evalu": [26, 34, 51, 70, 106, 117, 187], "heat_capac": 26, "mol_susc": 26, "exclud": 26, "param_susc": 26, "mol_thermochem_susc": 26, "param_thermochem_susc": 26, "converg": [26, 31, 32, 106, 187], "absolut": [26, 109, 187], "precis": [26, 106, 109, 187], "001": 26, "everi": 26, "100": 26, "start": [26, 187], "th": [26, 168], "No": 26, "cutoff": [26, 97], "standard": [26, 43, 83, 85, 187], "corr": 26, "basi": [26, 43, 83, 85, 94, 119, 121, 138, 139, 140, 150, 152, 156, 157, 162, 163, 168, 187], "sparse_corr": 26, "non": 26, "zero": 26, "coeffici": [26, 138, 166], "multiclex": 26, "samplingfixtur": [26, 27, 32, 95, 99, 100, 101, 103, 104, 105, 106, 110, 187], "summari": [26, 77, 85, 187], "upon": [26, 106], "alreadi": 26, "new": [26, 45], "append": [26, 187], "trajectori": [26, 106, 187], "when": [26, 59, 61, 62, 95, 102, 106, 187], "taken": [26, 106, 187], "output": [26, 106, 112, 113, 187], "larg": 26, "individu": [26, 106, 177], "observ": [26, 106, 187], "directori": [26, 106], "log": [26, 106, 187], "statu": [26, 106, 113, 187], "where": [26, 84, 106, 162, 163, 184, 187], "should": [26, 106, 187], "written": [26, 106], "time": [26, 37, 61, 106, 110, 187], "between": [26, 106, 145], "second": [26, 106, 176, 177], "after": [26, 106], "so": [26, 106], "sampling_param": [26, 106], "longer": [26, 106], "than": [26, 106, 176, 184], "log_frequency_is_": [26, 106], "less": [26, 106], "frequent": [26, 106], "sampling_fixture_param": [26, 27, 32, 49, 95, 102, 110], "statemodifyingfunctionmap": [28, 135, 136, 137], "montepotenti": [30, 45, 46, 47, 48, 187], "run_manag": 31, "runmanag": [31, 96, 97, 98, 99, 100, 101, 186], "occ_loc": [31, 32, 34, 117, 130, 132, 175], "occloc": [31, 32, 34, 117, 125, 130, 132, 175], "singl": [31, 32, 172, 187], "evolv": [31, 32], "specifi": [31, 32, 95, 102, 106, 109, 149, 162, 163, 176, 177, 184, 187], "criteria": [31, 32, 177], "collect": [31, 32, 49, 95, 102, 187], "occup": [31, 32, 34, 45, 117, 125, 130, 132, 144, 162, 163, 173, 175], "locat": [31, 32, 34, 85, 90, 117, 125, 130, 132, 175], "user": [31, 32, 34, 117, 175, 187], "respons": [31, 32, 34, 117, 175], "ensur": [31, 32, 34, 117, 175], "up": [31, 32, 34, 117, 175, 187], "date": [31, 32, 34, 117, 175], "updat": [31, 32, 34, 117, 130, 132, 175], "engin": [32, 95, 102, 175], "randomnumberengin": [32, 95, 96, 102, 175], "random": [32, 95, 96, 102, 175], "seed": 32, "std": 32, "random_devic": 32, "It": 32, "sampling_fixtur": 32, "statesamplingfunctionmap": [33, 66, 106, 110, 114], "onc": 34, "call": [34, 106, 109, 130], "outsid": 34, "statedata": [35, 48, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 187], "simul": [38, 186], "hold": [38, 41, 187], "special": [38, 130], "deepcopi": 38, "microst": 38, "accept": [38, 57], "make_conditions_from_value_map": 38, "descript": [41, 43, 67, 68, 130], "share": 41, "avoid": 41, "duplic": 41, "write_prim_basi": [43, 83, 85], "repres": [43, 67, 68, 116], "dof": [43, 83, 85, 94, 162, 163, 174], "implement": [44, 187], "linear_site_index": 45, "new_occ": 45, "site": [45, 171, 172], "being": [48, 100, 101], "structur": [49, 77, 102, 162, 163, 174, 187], "completioncheckparam": [52, 106, 108, 187], "elaps": [53, 59], "clocktim": [53, 59], "json_sampling_funct": [54, 106, 110], "jsonsamplermap": 55, "total": [57, 58, 144], "reject": 58, "count": 60, "could": [60, 187], "step": [60, 176, 177, 187], "whensampl": 60, "applic": 61, "weight": 63, "normal": 63, "sampling_funct": [64, 106, 110], "samplermap": 65, "shape": [67, 84, 162, 163, 184, 187], "numpi": [67, 162, 163, 175], "float64": [67, 175], "m": [67, 68, 72, 175, 184], "component_nam": [67, 109], "end": 67, "quantiti": [67, 68, 72, 109, 187], "column": [67, 68, 72, 84, 162, 163, 184], "major": [67, 68, 72], "unrol": [67, 68, 72], "scalar": [67, 72], "vector": [67, 68, 72, 84, 162, 163, 168, 176, 177, 184], "matrix": [67, 68, 72, 84, 124, 129, 162, 163, 184], "etc": [67, 68, 72, 187], "arrai": [67, 70, 144, 168], "proper": [67, 70], "size": [67, 70, 85, 88], "string": [67, 68, 177], "e": [67, 68], "2": [67, 68], "mg": [67, 68], "va": [67, 68], "o": [67, 68], "resultsanalysisfunct": [68, 69, 70, 71, 72, 73, 187], "typic": [68, 130], "like": [73, 134, 187], "_clexmonte_run_manag": [], "itemsview": [74, 135], "_clexmonte_st": [], "keysview": [75, 136], "valuesview": [76, 137], "initial_st": [77, 83, 176, 177], "final_st": [77, 83], "determin": [77, 85, 176, 177, 187], "its": [77, 85, 187], "case": [77, 85, 187], "volum": [82, 176, 177, 184, 187], "integ": [82, 144, 176, 177, 184], "multipl": [82, 109, 112, 176, 177, 184, 187], "primit": [82, 84, 174, 176, 177], "write_initial_st": [83, 85, 91], "write_final_st": [83, 85, 88, 91], "degre": [83, 85, 94, 174], "freedom": [83, 85, 94, 174], "transform": [84, 124, 129, 162, 163, 175, 184], "t": [84, 162, 163, 184], "relat": [84, 162, 163, 184], "lattic": [84, 162, 163, 176, 177, 184], "": [84, 85, 86, 87, 88, 124, 125, 129, 130, 132, 162, 163, 176, 177, 184], "l": [84, 162, 163, 184], "accord": [84, 162, 163, 176, 177, 184, 187], "3": [84, 138, 162, 163, 184], "matric": [84, 162, 163, 184], "int64": [84, 124, 129, 162, 163], "do_save_all_initial_st": 85, "do_save_all_final_st": 85, "do_save_last_final_st": 85, "affect": [], "last": [85, 88], "global_cutoff": [95, 187], "how": [95, 102, 106, 187], "global": [97, 162, 163], "index": [98, 177], "get": [99, 118, 119, 120, 121, 122, 123, 126, 130, 139, 140, 141, 142, 143, 146, 147, 148, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 171, 172, 175], "manag": [100, 101], "analysis_funct": [106, 110], "samplingparam": [106, 115, 187], "completion_check_param": 106, "analysis_nam": 106, "mean": [106, 187], "estim": [106, 187], "ab": 109, "rel": [109, 149, 187], "component_index": 109, "level": [109, 187], "equilibr": 109, "To": 109, "chain": 109, "requestedprecisionconstructor": 109, "time_sampling_allow": 110, "valid": 110, "whether": [110, 187], "intend": 110, "distinguish": 112, "handl": [113, 138], "methodlog": 113, "specif": 117, "clusterexpans": [118, 142, 187], "localclusterexpans": [120, 158], "local": [120, 121, 122, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 187], "localcorrel": 121, "multilocalclusterexpans": [122, 160], "multiclusterexpans": [123, 164], "orderparamet": [126, 147, 148, 167, 187], "involv": 130, "funcnam": 130, "enforc": [130, 175, 176], "enforce_composition_f": 130, "signatur": [130, 132], "def": [130, 132], "func": [130, 132], "event": [74, 75, 76, 130, 132, 135, 136, 137, 141, 171, 172, 175, 187], "bodi": [130, 132], "support": [130, 132], "tracker": [130, 132], "statemodifyingfunct": [131, 132, 133, 134], "xtal_prim": 138, "composition_convert": 138, "compositionconvert": [138, 145, 187], "n_dimens": 138, "ax": [138, 184, 187], "definit": 138, "neighbor": [138, 170], "dimension": [138, 166], "clexul": [139, 150, 187], "localclexul": [139, 156], "occswap": [141, 171, 172, 175], "swap": [141, 171, 172, 175], "_clexmonte_system": [142, 158, 160, 164, 167], "config": [142, 158, 160, 163, 164, 167], "sublattic": 144, "compositioncalcul": [144, 175], "speci": [145, 173], "dofspac": [146, 147, 148, 168], "defin": [148, 187], "search_path": 149, "local_clexul": 156, "array_lik": [162, 163, 184], "dtype": [162, 163, 184], "superstructur": [162, 163], "default_configur": 162, "express": [162, 163], "default_st": 163, "form": [168, 177], "symmetri": 169, "primneighborlist": 170, "multioccswap": 171, "propos": [172, 175], "crystal": [174, 187], "target_mol_composit": 175, "composition_calcul": 175, "semigrand_canonical_swap": 175, "target": 175, "most": [175, 187], "close": [175, 176], "improv": 175, "consist": 175, "found": [175, 177], "repeat": 175, "unless": 175, "thei": [175, 176], "explicitli": [175, 187], "neither": [175, 176], "nor": [175, 176], "dir": [176, 177, 184], "abc": [176, 177, 184], "min_volum": [176, 177, 184], "1000": [176, 177, 184], "appropri": [176, 177], "work": [176, 177], "follow": [176, 177, 187], "With": 176, "make_initial_st": [176, 187], "optim": 176, "satisfi": 176, "take": 176, "exactli": 176, "direct": [176, 177, 184], "along": [176, 177, 184, 187], "expand": [176, 177, 184], "b": [176, 177, 184], "c": [176, 177, 184], "third": [176, 177, 184], "forc": [176, 177], "transformation_matrix_to_supercel": [176, 177], "rather": 176, "is_canonical_st": [], "restrict": 177, "over": 177, "els": 177, "chosen": [176, 177], "consider": 177, "meet": 177, "remov": 177, "still": 177, "scale": [177, 184], "scale_supercel": 177, "subject": 177, "creat": 177, "were": 177, "wa": 177, "pars": [179, 180, 181, 182, 183], "required_typ": [179, 181], "default_valu": 179, "kwarg": [179, 181, 183], "write_nul": 183, "superlattic": 184, "seoncd": 184, "t_final": 184, "diagon": 184, "greater": 184, "approach": 186, "basic": 187, "setup": 187, "section": 187, "independ": 187, "particular": 187, "sytem": 187, "also": 187, "statesamplingfunct": 187, "jsonstatesamplingfunct": 187, "run_fixtur": 187, "combin": 187, "give": 187, "exact": 187, "make_canonical_initial_st": 187, "certain": 187, "enforce_composit": 187, "perturb": 187, "desir": 187, "both": 187, "often": 187, "maximum": 187, "comput": 187, "recent": 187, "In": 187, "some": 187, "re": 187, "differ": 187, "interv": 187, "do": 187, "finish": 187, "stop": 187, "addition": 187, "vari": 187, "main": 187, "averag": 187, "heat": 187, "capac": 187, "suscept": 187, "fluctuat": 187, "addit": 187, "eas": 187, "integr": 187, "free": 187, "organ": 187, "increas": 187, "constant": 187, "chemic": 187, "variou": 187, "autom": 187, "run_seri": 187, "flow": 187, "help": 187, "process": 187, "submit": 187, "job": 187, "analyz": 187, "plot": 187, "delet": [85, 88], "reduc": [85, 88], "memori": [85, 88], "_monte_ev": [74, 75, 76, 135, 136, 137], "param_chem_pot": 23, "either": 176, "modif": 176, "Then": 177}, "objects": {"libcasm": [[4, 0, 0, "-", "clexmonte"]], "libcasm.clexmonte": [[5, 1, 1, "", "FindMinPotentialConfigs"], [8, 1, 1, "", "FixedConfigGenerator"], [12, 1, 1, "", "IncrementalConditionsStateGenerator"], [23, 1, 1, "", "MonteCalculator"], [38, 1, 1, "", "MonteCarloState"], [44, 1, 1, "", "MontePotential"], [49, 1, 1, "", "Results"], [67, 1, 1, "", "ResultsAnalysisFunction"], [73, 1, 1, "", "ResultsAnalysisFunctionMap"], [77, 1, 1, "", "RunData"], [85, 1, 1, "", "RunDataOutputParams"], [95, 1, 1, "", "RunManager"], [102, 1, 1, "", "SamplingFixture"], [106, 1, 1, "", "SamplingFixtureParams"], [117, 1, 1, "", "StateData"], [130, 1, 1, "", "StateModifyingFunction"], [134, 1, 1, "", "StateModifyingFunctionMap"], [138, 1, 1, "", "System"], [175, 5, 1, "", "enforce_composition"], [176, 5, 1, "", "make_canonical_initial_state"], [177, 5, 1, "", "make_initial_state"], [178, 0, 0, "-", "parsing"], [184, 5, 1, "", "scale_supercell"]], "libcasm.clexmonte.FindMinPotentialConfigs": [[6, 2, 1, "", "check"], [7, 2, 1, "", "reset"]], "libcasm.clexmonte.FixedConfigGenerator": [[9, 2, 1, "", "from_dict"], [10, 2, 1, "", "methodname"], [11, 2, 1, "", "to_dict"]], "libcasm.clexmonte.IncrementalConditionsStateGenerator": [[13, 2, 1, "", "append"], [14, 3, 1, "", "completed_runs"], [15, 2, 1, "", "from_dict"], [16, 3, 1, "", "is_complete"], [17, 2, 1, "", "methodname"], [18, 3, 1, "", "n_completed_runs"], [19, 3, 1, "", "next_state"], [20, 2, 1, "", "read_completed_runs"], [21, 2, 1, "", "to_dict"], [22, 2, 1, "", "write_completed_runs"]], "libcasm.clexmonte.MonteCalculator": [[24, 3, 1, "", "analysis_functions"], [25, 3, 1, "", "json_sampling_functions"], [26, 2, 1, "", "make_default_sampling_fixture_params"], [27, 2, 1, "", "make_sampling_fixture_params_from_dict"], [28, 3, 1, "", "modifying_functions"], [29, 3, 1, "", "name"], [30, 3, 1, "", "potential"], [31, 2, 1, "", "run"], [32, 2, 1, "", "run_fixture"], [33, 3, 1, "", "sampling_functions"], [34, 2, 1, "", "set_state_and_potential"], [35, 3, 1, "", "state_data"], [36, 3, 1, "", "system"], [37, 3, 1, "", "time_sampling_allowed"]], "libcasm.clexmonte.MonteCarloState": [[39, 3, 1, "", "conditions"], [40, 3, 1, "", "configuration"], [41, 2, 1, "", "from_dict"], [42, 3, 1, "", "properties"], [43, 2, 1, "", "to_dict"]], "libcasm.clexmonte.MontePotential": [[45, 2, 1, "", "occ_delta_per_supercell"], [46, 2, 1, "", "per_supercell"], [47, 2, 1, "", "per_unitcell"], [48, 3, 1, "", "state_data"]], "libcasm.clexmonte.Results": [[50, 3, 1, "", "analysis"], [51, 3, 1, "", "analysis_functions"], [52, 3, 1, "", "completion_check_results"], [53, 3, 1, "", "elapsed_clocktime"], [54, 3, 1, "", "json_sampler_names"], [55, 3, 1, "", "json_samplers"], [56, 3, 1, "", "json_sampling_functions"], [57, 3, 1, "", "n_accept"], [58, 3, 1, "", "n_reject"], [59, 3, 1, "", "sample_clocktime"], [60, 3, 1, "", "sample_count"], [61, 3, 1, "", "sample_time"], [62, 3, 1, "", "sample_trajectory"], [63, 3, 1, "", "sample_weight"], [64, 3, 1, "", "sampler_names"], [65, 3, 1, "", "samplers"], [66, 3, 1, "", "sampling_functions"]], "libcasm.clexmonte.ResultsAnalysisFunction": [[68, 3, 1, "", "component_names"], [69, 3, 1, "", "description"], [70, 3, 1, "", "function"], [71, 3, 1, "", "name"], [72, 3, 1, "", "shape"]], "libcasm.clexmonte.ResultsAnalysisFunctionMap": [[74, 2, 1, "", "items"], [75, 2, 1, "", "keys"], [76, 2, 1, "", "values"]], "libcasm.clexmonte.RunData": [[78, 4, 1, "", "conditions"], [79, 4, 1, "", "final_state"], [80, 2, 1, "", "from_dict"], [81, 4, 1, "", "initial_state"], [82, 4, 1, "", "n_unitcells"], [83, 2, 1, "", "to_dict"], [84, 4, 1, "", "transformation_matrix_to_super"]], "libcasm.clexmonte.RunDataOutputParams": [[86, 4, 1, "", "do_save_all_final_states"], [87, 4, 1, "", "do_save_all_initial_states"], [88, 4, 1, "", "do_save_last_final_state"], [89, 2, 1, "", "from_dict"], [90, 4, 1, "", "output_dir"], [91, 2, 1, "", "to_dict"], [92, 4, 1, "", "write_final_states"], [93, 4, 1, "", "write_initial_states"], [94, 4, 1, "", "write_prim_basis"]], "libcasm.clexmonte.RunManager": [[96, 3, 1, "", "engine"], [97, 3, 1, "", "global_cutoff"], [98, 3, 1, "", "run_index"], [99, 2, 1, "", "sampling_fixture"], [100, 3, 1, "", "sampling_fixture_labels"], [101, 3, 1, "", "sampling_fixtures"]], "libcasm.clexmonte.SamplingFixture": [[103, 3, 1, "", "label"], [104, 3, 1, "", "params"], [105, 3, 1, "", "results"]], "libcasm.clexmonte.SamplingFixtureParams": [[107, 3, 1, "", "analysis_functions"], [108, 3, 1, "", "completion_check_params"], [109, 2, 1, "", "converge"], [110, 2, 1, "", "from_dict"], [111, 3, 1, "", "json_sampling_functions"], [112, 3, 1, "", "label"], [113, 3, 1, "", "method_log"], [114, 3, 1, "", "sampling_functions"], [115, 3, 1, "", "sampling_params"], [116, 2, 1, "", "to_dict"]], "libcasm.clexmonte.StateData": [[118, 2, 1, "", "clex"], [119, 2, 1, "", "corr"], [120, 2, 1, "", "local_clex"], [121, 2, 1, "", "local_corr"], [122, 2, 1, "", "local_multiclex"], [123, 2, 1, "", "multiclex"], [124, 3, 1, "", "n_unitcells"], [125, 3, 1, "", "occ_location"], [126, 2, 1, "", "order_parameter"], [127, 3, 1, "", "state"], [128, 3, 1, "", "system"], [129, 3, 1, "", "transformation_matrix_to_super"]], "libcasm.clexmonte.StateModifyingFunction": [[131, 3, 1, "", "description"], [132, 3, 1, "", "function"], [133, 3, 1, "", "name"]], "libcasm.clexmonte.StateModifyingFunctionMap": [[135, 2, 1, "", "items"], [136, 2, 1, "", "keys"], [137, 2, 1, "", "values"]], "libcasm.clexmonte.System": [[139, 2, 1, "", "basis_set"], [140, 3, 1, "", "basis_set_keys"], [141, 2, 1, "", "canonical_swaps"], [142, 2, 1, "", "clex"], [143, 3, 1, "", "clex_keys"], [144, 3, 1, "", "composition_calculator"], [145, 3, 1, "", "composition_converter"], [146, 2, 1, "", "dof_space"], [147, 3, 1, "", "dof_space_keys"], [148, 3, 1, "", "dof_subspace_keys"], [149, 2, 1, "", "from_dict"], [150, 2, 1, "", "is_basis_set"], [151, 2, 1, "", "is_clex"], [152, 2, 1, "", "is_local_basis_set"], [153, 2, 1, "", "is_local_clex"], [154, 2, 1, "", "is_local_multiclex"], [155, 2, 1, "", "is_multiclex"], [156, 2, 1, "", "local_basis_set"], [157, 3, 1, "", "local_basis_set_keys"], [158, 2, 1, "", "local_clex"], [159, 3, 1, "", "local_clex_keys"], [160, 2, 1, "", "local_multiclex"], [161, 3, 1, "", "local_multiclex_keys"], [162, 2, 1, "", "make_default_configuration"], [163, 2, 1, "", "make_default_state"], [164, 2, 1, "", "multiclex"], [165, 3, 1, "", "multiclex_keys"], [166, 3, 1, "", "n_dimensions"], [167, 2, 1, "", "order_parameter"], [168, 2, 1, "", "order_parameter_subspaces"], [169, 3, 1, "", "prim"], [170, 3, 1, "", "prim_neighbor_list"], [171, 2, 1, "", "semigrand_canonical_multiswaps"], [172, 2, 1, "", "semigrand_canonical_swaps"], [173, 3, 1, "", "species_list"], [174, 3, 1, "", "xtal_prim"]], "libcasm.clexmonte.parsing": [[179, 5, 1, "", "optional_from_dict"], [180, 5, 1, "", "required_array_from_dict"], [181, 5, 1, "", "required_from_dict"], [182, 5, 1, "", "required_int_array_from_dict"], [183, 5, 1, "", "to_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"about": [0, 2], "bibliographi": 1, "libcasm": [2, 4, 178, 185], "clexmont": [2, 4, 178], "casm": 2, "licens": 2, "document": 2, "instal": 3, "findminpotentialconfig": 5, "check": 6, "reset": 7, "fixedconfiggener": 8, "from_dict": [9, 15, 41, 80, 89, 110, 149], "methodnam": [10, 17], "to_dict": [11, 21, 43, 83, 91, 116, 183], "incrementalconditionsstategener": 12, "append": 13, "completed_run": 14, "is_complet": 16, "n_completed_run": 18, "next_stat": 19, "read_completed_run": 20, "write_completed_run": 22, "montecalcul": [23, 187], "analysis_funct": [24, 51, 107], "json_sampling_funct": [25, 56, 111], "make_default_sampling_fixture_param": 26, "make_sampling_fixture_params_from_dict": 27, "modifying_funct": 28, "name": [29, 71, 133], "potenti": 30, "run": [31, 187], "run_fixtur": 32, "sampling_funct": [33, 66, 114], "set_state_and_potenti": 34, "state_data": [35, 48], "system": [36, 128, 138, 187], "time_sampling_allow": 37, "montecarlost": [38, 187], "condit": [39, 78], "configur": 40, "properti": 42, "montepotenti": 44, "occ_delta_per_supercel": 45, "per_supercel": 46, "per_unitcel": 47, "result": [49, 105], "analysi": 50, "completion_check_result": 52, "elapsed_clocktim": 53, "json_sampler_nam": 54, "json_sampl": 55, "n_accept": 57, "n_reject": 58, "sample_clocktim": 59, "sample_count": 60, "sample_tim": 61, "sample_trajectori": 62, "sample_weight": 63, "sampler_nam": 64, "sampler": 65, "resultsanalysisfunct": 67, "component_nam": 68, "descript": [69, 131], "function": [70, 132], "shape": 72, "resultsanalysisfunctionmap": 73, "item": [74, 135], "kei": [75, 136], "valu": [76, 137], "rundata": 77, "final_st": 79, "initial_st": 81, "n_unitcel": [82, 124], "transformation_matrix_to_sup": [84, 129], "rundataoutputparam": 85, "do_save_all_final_st": 86, "do_save_all_initial_st": 87, "do_save_last_final_st": 88, "output_dir": 90, "write_final_st": 92, "write_initial_st": 93, "write_prim_basi": 94, "runmanag": [95, 187], "engin": 96, "global_cutoff": 97, "run_index": 98, "sampling_fixtur": [99, 101], "sampling_fixture_label": 100, "samplingfixtur": 102, "label": [103, 112], "param": 104, "samplingfixtureparam": [106, 187], "completion_check_param": 108, "converg": 109, "method_log": 113, "sampling_param": 115, "statedata": 117, "clex": [118, 142], "corr": 119, "local_clex": [120, 158], "local_corr": 121, "local_multiclex": [122, 160], "multiclex": [123, 164], "occ_loc": 125, "order_paramet": [126, 167], "state": 127, "statemodifyingfunct": 130, "statemodifyingfunctionmap": 134, "basis_set": 139, "basis_set_kei": 140, "canonical_swap": 141, "clex_kei": 143, "composition_calcul": 144, "composition_convert": 145, "dof_spac": 146, "dof_space_kei": 147, "dof_subspace_kei": 148, "is_basis_set": 150, "is_clex": 151, "is_local_basis_set": 152, "is_local_clex": 153, "is_local_multiclex": 154, "is_multiclex": 155, "local_basis_set": 156, "local_basis_set_kei": 157, "local_clex_kei": 159, "local_multiclex_kei": 161, "make_default_configur": 162, "make_default_st": 163, "multiclex_kei": 165, "n_dimens": 166, "order_parameter_subspac": 168, "prim": 169, "prim_neighbor_list": 170, "semigrand_canonical_multiswap": 171, "semigrand_canonical_swap": 172, "species_list": 173, "xtal_prim": 174, "enforce_composit": 175, "make_canonical_initial_st": 176, "make_initial_st": 177, "pars": 178, "optional_from_dict": 179, "required_array_from_dict": 180, "required_from_dict": 181, "required_int_array_from_dict": 182, "scale_supercel": 184, "refer": 185, "usag": 186, "overview": 187, "gener": 187, "approach": 187, "mont": 187, "carlo": 187, "simul": 187}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "Bibliography": [[1, "bibliography"]], "libcasm-clexmonte": [[2, "libcasm-clexmonte"]], "About CASM": [[2, "about-casm"]], "License": [[2, "license"]], "Documentation": [[2, "documentation"]], "Installation": [[3, "installation"]], "libcasm.clexmonte": [[4, "module-libcasm.clexmonte"]], "FindMinPotentialConfigs": [[5, "findminpotentialconfigs"]], "check": [[6, "check"]], "reset": [[7, "reset"]], "FixedConfigGenerator": [[8, "fixedconfiggenerator"]], "from_dict": [[9, "from-dict"], [15, "from-dict"], [41, "from-dict"], [80, "from-dict"], [89, "from-dict"], [110, "from-dict"], [149, "from-dict"]], "methodname": [[10, "methodname"], [17, "methodname"]], "to_dict": [[11, "to-dict"], [21, "to-dict"], [43, "to-dict"], [83, "to-dict"], [91, "to-dict"], [116, "to-dict"], [183, "to-dict"]], "IncrementalConditionsStateGenerator": [[12, "incrementalconditionsstategenerator"]], "append": [[13, "append"]], "completed_runs": [[14, "completed-runs"]], "is_complete": [[16, "is-complete"]], "n_completed_runs": [[18, "n-completed-runs"]], "next_state": [[19, "next-state"]], "read_completed_runs": [[20, "read-completed-runs"]], "write_completed_runs": [[22, "write-completed-runs"]], "MonteCalculator": [[23, "montecalculator"], [187, "montecalculator"]], "analysis_functions": [[24, "analysis-functions"], [51, "analysis-functions"], [107, "analysis-functions"]], "json_sampling_functions": [[25, "json-sampling-functions"], [56, "json-sampling-functions"], [111, "json-sampling-functions"]], "make_default_sampling_fixture_params": [[26, "make-default-sampling-fixture-params"]], "make_sampling_fixture_params_from_dict": [[27, "make-sampling-fixture-params-from-dict"]], "modifying_functions": [[28, "modifying-functions"]], "name": [[29, "name"], [71, "name"], [133, "name"]], "potential": [[30, "potential"]], "run": [[31, "run"]], "run_fixture": [[32, "run-fixture"]], "sampling_functions": [[33, "sampling-functions"], [66, "sampling-functions"], [114, "sampling-functions"]], "set_state_and_potential": [[34, "set-state-and-potential"]], "state_data": [[35, "state-data"], [48, "state-data"]], "system": [[36, "system"], [128, "system"]], "time_sampling_allowed": [[37, "time-sampling-allowed"]], "MonteCarloState": [[38, "montecarlostate"], [187, "montecarlostate"]], "conditions": [[39, "conditions"], [78, "conditions"]], "configuration": [[40, "configuration"]], "properties": [[42, "properties"]], "MontePotential": [[44, "montepotential"]], "occ_delta_per_supercell": [[45, "occ-delta-per-supercell"]], "per_supercell": [[46, "per-supercell"]], "per_unitcell": [[47, "per-unitcell"]], "Results": [[49, "results"]], "analysis": [[50, "analysis"]], "completion_check_results": [[52, "completion-check-results"]], "elapsed_clocktime": [[53, "elapsed-clocktime"]], "json_sampler_names": [[54, "json-sampler-names"]], "json_samplers": [[55, "json-samplers"]], "n_accept": [[57, "n-accept"]], "n_reject": [[58, "n-reject"]], "sample_clocktime": [[59, "sample-clocktime"]], "sample_count": [[60, "sample-count"]], "sample_time": [[61, "sample-time"]], "sample_trajectory": [[62, "sample-trajectory"]], "sample_weight": [[63, "sample-weight"]], "sampler_names": [[64, "sampler-names"]], "samplers": [[65, "samplers"]], "ResultsAnalysisFunction": [[67, "resultsanalysisfunction"]], "component_names": [[68, "component-names"]], "description": [[69, "description"], [131, "description"]], "function": [[70, "function"], [132, "function"]], "shape": [[72, "shape"]], "ResultsAnalysisFunctionMap": [[73, "resultsanalysisfunctionmap"]], "items": [[74, "items"], [135, "items"]], "keys": [[75, "keys"], [136, "keys"]], "values": [[76, "values"], [137, "values"]], "RunData": [[77, "rundata"]], "final_state": [[79, "final-state"]], "initial_state": [[81, "initial-state"]], "n_unitcells": [[82, "n-unitcells"], [124, "n-unitcells"]], "transformation_matrix_to_super": [[84, "transformation-matrix-to-super"], [129, "transformation-matrix-to-super"]], "RunDataOutputParams": [[85, "rundataoutputparams"]], "do_save_all_final_states": [[86, "do-save-all-final-states"]], "do_save_all_initial_states": [[87, "do-save-all-initial-states"]], "do_save_last_final_state": [[88, "do-save-last-final-state"]], "output_dir": [[90, "output-dir"]], "write_final_states": [[92, "write-final-states"]], "write_initial_states": [[93, "write-initial-states"]], "write_prim_basis": [[94, "write-prim-basis"]], "RunManager": [[95, "runmanager"], [187, "runmanager"]], "engine": [[96, "engine"]], "global_cutoff": [[97, "global-cutoff"]], "run_index": [[98, "run-index"]], "sampling_fixture": [[99, "sampling-fixture"]], "sampling_fixture_labels": [[100, "sampling-fixture-labels"]], "sampling_fixtures": [[101, "sampling-fixtures"]], "SamplingFixture": [[102, "samplingfixture"]], "label": [[103, "label"], [112, "label"]], "params": [[104, "params"]], "results": [[105, "results"]], "SamplingFixtureParams": [[106, "samplingfixtureparams"], [187, "samplingfixtureparams"]], "completion_check_params": [[108, "completion-check-params"]], "converge": [[109, "converge"]], "method_log": [[113, "method-log"]], "sampling_params": [[115, "sampling-params"]], "StateData": [[117, "statedata"]], "clex": [[118, "clex"], [142, "clex"]], "corr": [[119, "corr"]], "local_clex": [[120, "local-clex"], [158, "local-clex"]], "local_corr": [[121, "local-corr"]], "local_multiclex": [[122, "local-multiclex"], [160, "local-multiclex"]], "multiclex": [[123, "multiclex"], [164, "multiclex"]], "occ_location": [[125, "occ-location"]], "order_parameter": [[126, "order-parameter"], [167, "order-parameter"]], "state": [[127, "state"]], "StateModifyingFunction": [[130, "statemodifyingfunction"]], "StateModifyingFunctionMap": [[134, "statemodifyingfunctionmap"]], "System": [[138, "system"], [187, "system"]], "basis_set": [[139, "basis-set"]], "basis_set_keys": [[140, "basis-set-keys"]], "canonical_swaps": [[141, "canonical-swaps"]], "clex_keys": [[143, "clex-keys"]], "composition_calculator": [[144, "composition-calculator"]], "composition_converter": [[145, "composition-converter"]], "dof_space": [[146, "dof-space"]], "dof_space_keys": [[147, "dof-space-keys"]], "dof_subspace_keys": [[148, "dof-subspace-keys"]], "is_basis_set": [[150, "is-basis-set"]], "is_clex": [[151, "is-clex"]], "is_local_basis_set": [[152, "is-local-basis-set"]], "is_local_clex": [[153, "is-local-clex"]], "is_local_multiclex": [[154, "is-local-multiclex"]], "is_multiclex": [[155, "is-multiclex"]], "local_basis_set": [[156, "local-basis-set"]], "local_basis_set_keys": [[157, "local-basis-set-keys"]], "local_clex_keys": [[159, "local-clex-keys"]], "local_multiclex_keys": [[161, "local-multiclex-keys"]], "make_default_configuration": [[162, "make-default-configuration"]], "make_default_state": [[163, "make-default-state"]], "multiclex_keys": [[165, "multiclex-keys"]], "n_dimensions": [[166, "n-dimensions"]], "order_parameter_subspaces": [[168, "order-parameter-subspaces"]], "prim": [[169, "prim"]], "prim_neighbor_list": [[170, "prim-neighbor-list"]], "semigrand_canonical_multiswaps": [[171, "semigrand-canonical-multiswaps"]], "semigrand_canonical_swaps": [[172, "semigrand-canonical-swaps"]], "species_list": [[173, "species-list"]], "xtal_prim": [[174, "xtal-prim"]], "enforce_composition": [[175, "enforce-composition"]], "make_canonical_initial_state": [[176, "make-canonical-initial-state"]], "make_initial_state": [[177, "make-initial-state"]], "libcasm.clexmonte.parsing": [[178, "module-libcasm.clexmonte.parsing"]], "optional_from_dict": [[179, "optional-from-dict"]], "required_array_from_dict": [[180, "required-array-from-dict"]], "required_from_dict": [[181, "required-from-dict"]], "required_int_array_from_dict": [[182, "required-int-array-from-dict"]], "scale_supercell": [[184, "scale-supercell"]], "Reference (libcasm)": [[185, "reference-libcasm"]], "Usage": [[186, "usage"]], "Overview": [[187, "overview"]], "General approach": [[187, "general-approach"]], "Running Monte Carlo simulations": [[187, "running-monte-carlo-simulations"]]}, "indexentries": {"libcasm.clexmonte": [[4, "module-libcasm.clexmonte"]], "module": [[4, "module-libcasm.clexmonte"], [178, "module-libcasm.clexmonte.parsing"]], "findminpotentialconfigs (class in libcasm.clexmonte)": [[5, "libcasm.clexmonte.FindMinPotentialConfigs"]], "check() (libcasm.clexmonte.findminpotentialconfigs method)": [[6, "libcasm.clexmonte.FindMinPotentialConfigs.check"]], "reset() (libcasm.clexmonte.findminpotentialconfigs method)": [[7, "libcasm.clexmonte.FindMinPotentialConfigs.reset"]], "fixedconfiggenerator (class in libcasm.clexmonte)": [[8, "libcasm.clexmonte.FixedConfigGenerator"]], "from_dict() (libcasm.clexmonte.fixedconfiggenerator static method)": [[9, "libcasm.clexmonte.FixedConfigGenerator.from_dict"]], "methodname() (libcasm.clexmonte.fixedconfiggenerator static method)": [[10, "libcasm.clexmonte.FixedConfigGenerator.methodname"]], "to_dict() (libcasm.clexmonte.fixedconfiggenerator method)": [[11, "libcasm.clexmonte.FixedConfigGenerator.to_dict"]], "incrementalconditionsstategenerator (class in libcasm.clexmonte)": [[12, "libcasm.clexmonte.IncrementalConditionsStateGenerator"]], "append() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[13, "libcasm.clexmonte.IncrementalConditionsStateGenerator.append"]], "completed_runs (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[14, "libcasm.clexmonte.IncrementalConditionsStateGenerator.completed_runs"]], "from_dict() (libcasm.clexmonte.incrementalconditionsstategenerator static method)": [[15, "libcasm.clexmonte.IncrementalConditionsStateGenerator.from_dict"]], "is_complete (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[16, "libcasm.clexmonte.IncrementalConditionsStateGenerator.is_complete"]], "methodname() (libcasm.clexmonte.incrementalconditionsstategenerator static method)": [[17, "libcasm.clexmonte.IncrementalConditionsStateGenerator.methodname"]], "n_completed_runs (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[18, "libcasm.clexmonte.IncrementalConditionsStateGenerator.n_completed_runs"]], "next_state (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[19, "libcasm.clexmonte.IncrementalConditionsStateGenerator.next_state"]], "read_completed_runs() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[20, "libcasm.clexmonte.IncrementalConditionsStateGenerator.read_completed_runs"]], "to_dict() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[21, "libcasm.clexmonte.IncrementalConditionsStateGenerator.to_dict"]], "write_completed_runs() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[22, "libcasm.clexmonte.IncrementalConditionsStateGenerator.write_completed_runs"]], "montecalculator (class in libcasm.clexmonte)": [[23, "libcasm.clexmonte.MonteCalculator"]], "analysis_functions (libcasm.clexmonte.montecalculator property)": [[24, "libcasm.clexmonte.MonteCalculator.analysis_functions"]], "json_sampling_functions (libcasm.clexmonte.montecalculator property)": [[25, "libcasm.clexmonte.MonteCalculator.json_sampling_functions"]], "make_default_sampling_fixture_params() (libcasm.clexmonte.montecalculator method)": [[26, "libcasm.clexmonte.MonteCalculator.make_default_sampling_fixture_params"]], "make_sampling_fixture_params_from_dict() (libcasm.clexmonte.montecalculator method)": [[27, "libcasm.clexmonte.MonteCalculator.make_sampling_fixture_params_from_dict"]], "modifying_functions (libcasm.clexmonte.montecalculator property)": [[28, "libcasm.clexmonte.MonteCalculator.modifying_functions"]], "name (libcasm.clexmonte.montecalculator property)": [[29, "libcasm.clexmonte.MonteCalculator.name"]], "potential (libcasm.clexmonte.montecalculator property)": [[30, "libcasm.clexmonte.MonteCalculator.potential"]], "run() (libcasm.clexmonte.montecalculator method)": [[31, "libcasm.clexmonte.MonteCalculator.run"]], "run_fixture() (libcasm.clexmonte.montecalculator method)": [[32, "libcasm.clexmonte.MonteCalculator.run_fixture"]], "sampling_functions (libcasm.clexmonte.montecalculator property)": [[33, "libcasm.clexmonte.MonteCalculator.sampling_functions"]], "set_state_and_potential() (libcasm.clexmonte.montecalculator method)": [[34, "libcasm.clexmonte.MonteCalculator.set_state_and_potential"]], "state_data (libcasm.clexmonte.montecalculator property)": [[35, "libcasm.clexmonte.MonteCalculator.state_data"]], "system (libcasm.clexmonte.montecalculator property)": [[36, "libcasm.clexmonte.MonteCalculator.system"]], "time_sampling_allowed (libcasm.clexmonte.montecalculator property)": [[37, "libcasm.clexmonte.MonteCalculator.time_sampling_allowed"]], "montecarlostate (class in libcasm.clexmonte)": [[38, "libcasm.clexmonte.MonteCarloState"]], "conditions (libcasm.clexmonte.montecarlostate property)": [[39, "libcasm.clexmonte.MonteCarloState.conditions"]], "configuration (libcasm.clexmonte.montecarlostate property)": [[40, "libcasm.clexmonte.MonteCarloState.configuration"]], "from_dict() (libcasm.clexmonte.montecarlostate static method)": [[41, "libcasm.clexmonte.MonteCarloState.from_dict"]], "properties (libcasm.clexmonte.montecarlostate property)": [[42, "libcasm.clexmonte.MonteCarloState.properties"]], "to_dict() (libcasm.clexmonte.montecarlostate method)": [[43, "libcasm.clexmonte.MonteCarloState.to_dict"]], "montepotential (class in libcasm.clexmonte)": [[44, "libcasm.clexmonte.MontePotential"]], "occ_delta_per_supercell() (libcasm.clexmonte.montepotential method)": [[45, "libcasm.clexmonte.MontePotential.occ_delta_per_supercell"]], "per_supercell() (libcasm.clexmonte.montepotential method)": [[46, "libcasm.clexmonte.MontePotential.per_supercell"]], "per_unitcell() (libcasm.clexmonte.montepotential method)": [[47, "libcasm.clexmonte.MontePotential.per_unitcell"]], "state_data (libcasm.clexmonte.montepotential property)": [[48, "libcasm.clexmonte.MontePotential.state_data"]], "results (class in libcasm.clexmonte)": [[49, "libcasm.clexmonte.Results"]], "analysis (libcasm.clexmonte.results property)": [[50, "libcasm.clexmonte.Results.analysis"]], "analysis_functions (libcasm.clexmonte.results property)": [[51, "libcasm.clexmonte.Results.analysis_functions"]], "completion_check_results (libcasm.clexmonte.results property)": [[52, "libcasm.clexmonte.Results.completion_check_results"]], "elapsed_clocktime (libcasm.clexmonte.results property)": [[53, "libcasm.clexmonte.Results.elapsed_clocktime"]], "json_sampler_names (libcasm.clexmonte.results property)": [[54, "libcasm.clexmonte.Results.json_sampler_names"]], "json_samplers (libcasm.clexmonte.results property)": [[55, "libcasm.clexmonte.Results.json_samplers"]], "json_sampling_functions (libcasm.clexmonte.results property)": [[56, "libcasm.clexmonte.Results.json_sampling_functions"]], "n_accept (libcasm.clexmonte.results property)": [[57, "libcasm.clexmonte.Results.n_accept"]], "n_reject (libcasm.clexmonte.results property)": [[58, "libcasm.clexmonte.Results.n_reject"]], "sample_clocktime (libcasm.clexmonte.results property)": [[59, "libcasm.clexmonte.Results.sample_clocktime"]], "sample_count (libcasm.clexmonte.results property)": [[60, "libcasm.clexmonte.Results.sample_count"]], "sample_time (libcasm.clexmonte.results property)": [[61, "libcasm.clexmonte.Results.sample_time"]], "sample_trajectory (libcasm.clexmonte.results property)": [[62, "libcasm.clexmonte.Results.sample_trajectory"]], "sample_weight (libcasm.clexmonte.results property)": [[63, "libcasm.clexmonte.Results.sample_weight"]], "sampler_names (libcasm.clexmonte.results property)": [[64, "libcasm.clexmonte.Results.sampler_names"]], "samplers (libcasm.clexmonte.results property)": [[65, "libcasm.clexmonte.Results.samplers"]], "sampling_functions (libcasm.clexmonte.results property)": [[66, "libcasm.clexmonte.Results.sampling_functions"]], "resultsanalysisfunction (class in libcasm.clexmonte)": [[67, "libcasm.clexmonte.ResultsAnalysisFunction"]], "component_names (libcasm.clexmonte.resultsanalysisfunction property)": [[68, "libcasm.clexmonte.ResultsAnalysisFunction.component_names"]], "description (libcasm.clexmonte.resultsanalysisfunction property)": [[69, "libcasm.clexmonte.ResultsAnalysisFunction.description"]], "function (libcasm.clexmonte.resultsanalysisfunction property)": [[70, "libcasm.clexmonte.ResultsAnalysisFunction.function"]], "name (libcasm.clexmonte.resultsanalysisfunction property)": [[71, "libcasm.clexmonte.ResultsAnalysisFunction.name"]], "shape (libcasm.clexmonte.resultsanalysisfunction property)": [[72, "libcasm.clexmonte.ResultsAnalysisFunction.shape"]], "resultsanalysisfunctionmap (class in libcasm.clexmonte)": [[73, "libcasm.clexmonte.ResultsAnalysisFunctionMap"]], "items() (libcasm.clexmonte.resultsanalysisfunctionmap method)": [[74, "libcasm.clexmonte.ResultsAnalysisFunctionMap.items"]], "keys() (libcasm.clexmonte.resultsanalysisfunctionmap method)": [[75, "libcasm.clexmonte.ResultsAnalysisFunctionMap.keys"]], "values() (libcasm.clexmonte.resultsanalysisfunctionmap method)": [[76, "libcasm.clexmonte.ResultsAnalysisFunctionMap.values"]], "rundata (class in libcasm.clexmonte)": [[77, "libcasm.clexmonte.RunData"]], "conditions (libcasm.clexmonte.rundata attribute)": [[78, "libcasm.clexmonte.RunData.conditions"]], "final_state (libcasm.clexmonte.rundata attribute)": [[79, "libcasm.clexmonte.RunData.final_state"]], "from_dict() (libcasm.clexmonte.rundata static method)": [[80, "libcasm.clexmonte.RunData.from_dict"]], "initial_state (libcasm.clexmonte.rundata attribute)": [[81, "libcasm.clexmonte.RunData.initial_state"]], "n_unitcells (libcasm.clexmonte.rundata attribute)": [[82, "libcasm.clexmonte.RunData.n_unitcells"]], "to_dict() (libcasm.clexmonte.rundata method)": [[83, "libcasm.clexmonte.RunData.to_dict"]], "transformation_matrix_to_super (libcasm.clexmonte.rundata attribute)": [[84, "libcasm.clexmonte.RunData.transformation_matrix_to_super"]], "rundataoutputparams (class in libcasm.clexmonte)": [[85, "libcasm.clexmonte.RunDataOutputParams"]], "do_save_all_final_states (libcasm.clexmonte.rundataoutputparams attribute)": [[86, "libcasm.clexmonte.RunDataOutputParams.do_save_all_final_states"]], "do_save_all_initial_states (libcasm.clexmonte.rundataoutputparams attribute)": [[87, "libcasm.clexmonte.RunDataOutputParams.do_save_all_initial_states"]], "do_save_last_final_state (libcasm.clexmonte.rundataoutputparams attribute)": [[88, "libcasm.clexmonte.RunDataOutputParams.do_save_last_final_state"]], "from_dict() (libcasm.clexmonte.rundataoutputparams static method)": [[89, "libcasm.clexmonte.RunDataOutputParams.from_dict"]], "output_dir (libcasm.clexmonte.rundataoutputparams attribute)": [[90, "libcasm.clexmonte.RunDataOutputParams.output_dir"]], "to_dict() (libcasm.clexmonte.rundataoutputparams method)": [[91, "libcasm.clexmonte.RunDataOutputParams.to_dict"]], "write_final_states (libcasm.clexmonte.rundataoutputparams attribute)": [[92, "libcasm.clexmonte.RunDataOutputParams.write_final_states"]], "write_initial_states (libcasm.clexmonte.rundataoutputparams attribute)": [[93, "libcasm.clexmonte.RunDataOutputParams.write_initial_states"]], "write_prim_basis (libcasm.clexmonte.rundataoutputparams attribute)": [[94, "libcasm.clexmonte.RunDataOutputParams.write_prim_basis"]], "runmanager (class in libcasm.clexmonte)": [[95, "libcasm.clexmonte.RunManager"]], "engine (libcasm.clexmonte.runmanager property)": [[96, "libcasm.clexmonte.RunManager.engine"]], "global_cutoff (libcasm.clexmonte.runmanager property)": [[97, "libcasm.clexmonte.RunManager.global_cutoff"]], "run_index (libcasm.clexmonte.runmanager property)": [[98, "libcasm.clexmonte.RunManager.run_index"]], "sampling_fixture() (libcasm.clexmonte.runmanager method)": [[99, "libcasm.clexmonte.RunManager.sampling_fixture"]], "sampling_fixture_labels (libcasm.clexmonte.runmanager property)": [[100, "libcasm.clexmonte.RunManager.sampling_fixture_labels"]], "sampling_fixtures (libcasm.clexmonte.runmanager property)": [[101, "libcasm.clexmonte.RunManager.sampling_fixtures"]], "samplingfixture (class in libcasm.clexmonte)": [[102, "libcasm.clexmonte.SamplingFixture"]], "label (libcasm.clexmonte.samplingfixture property)": [[103, "libcasm.clexmonte.SamplingFixture.label"]], "params (libcasm.clexmonte.samplingfixture property)": [[104, "libcasm.clexmonte.SamplingFixture.params"]], "results (libcasm.clexmonte.samplingfixture property)": [[105, "libcasm.clexmonte.SamplingFixture.results"]], "samplingfixtureparams (class in libcasm.clexmonte)": [[106, "libcasm.clexmonte.SamplingFixtureParams"]], "analysis_functions (libcasm.clexmonte.samplingfixtureparams property)": [[107, "libcasm.clexmonte.SamplingFixtureParams.analysis_functions"]], "completion_check_params (libcasm.clexmonte.samplingfixtureparams property)": [[108, "libcasm.clexmonte.SamplingFixtureParams.completion_check_params"]], "converge() (libcasm.clexmonte.samplingfixtureparams method)": [[109, "libcasm.clexmonte.SamplingFixtureParams.converge"]], "from_dict() (libcasm.clexmonte.samplingfixtureparams static method)": [[110, "libcasm.clexmonte.SamplingFixtureParams.from_dict"]], "json_sampling_functions (libcasm.clexmonte.samplingfixtureparams property)": [[111, "libcasm.clexmonte.SamplingFixtureParams.json_sampling_functions"]], "label (libcasm.clexmonte.samplingfixtureparams property)": [[112, "libcasm.clexmonte.SamplingFixtureParams.label"]], "method_log (libcasm.clexmonte.samplingfixtureparams property)": [[113, "libcasm.clexmonte.SamplingFixtureParams.method_log"]], "sampling_functions (libcasm.clexmonte.samplingfixtureparams property)": [[114, "libcasm.clexmonte.SamplingFixtureParams.sampling_functions"]], "sampling_params (libcasm.clexmonte.samplingfixtureparams property)": [[115, "libcasm.clexmonte.SamplingFixtureParams.sampling_params"]], "to_dict() (libcasm.clexmonte.samplingfixtureparams method)": [[116, "libcasm.clexmonte.SamplingFixtureParams.to_dict"]], "statedata (class in libcasm.clexmonte)": [[117, "libcasm.clexmonte.StateData"]], "clex() (libcasm.clexmonte.statedata method)": [[118, "libcasm.clexmonte.StateData.clex"]], "corr() (libcasm.clexmonte.statedata method)": [[119, "libcasm.clexmonte.StateData.corr"]], "local_clex() (libcasm.clexmonte.statedata method)": [[120, "libcasm.clexmonte.StateData.local_clex"]], "local_corr() (libcasm.clexmonte.statedata method)": [[121, "libcasm.clexmonte.StateData.local_corr"]], "local_multiclex() (libcasm.clexmonte.statedata method)": [[122, "libcasm.clexmonte.StateData.local_multiclex"]], "multiclex() (libcasm.clexmonte.statedata method)": [[123, "libcasm.clexmonte.StateData.multiclex"]], "n_unitcells (libcasm.clexmonte.statedata property)": [[124, "libcasm.clexmonte.StateData.n_unitcells"]], "occ_location (libcasm.clexmonte.statedata property)": [[125, "libcasm.clexmonte.StateData.occ_location"]], "order_parameter() (libcasm.clexmonte.statedata method)": [[126, "libcasm.clexmonte.StateData.order_parameter"]], "state (libcasm.clexmonte.statedata property)": [[127, "libcasm.clexmonte.StateData.state"]], "system (libcasm.clexmonte.statedata property)": [[128, "libcasm.clexmonte.StateData.system"]], "transformation_matrix_to_super (libcasm.clexmonte.statedata property)": [[129, "libcasm.clexmonte.StateData.transformation_matrix_to_super"]], "statemodifyingfunction (class in libcasm.clexmonte)": [[130, "libcasm.clexmonte.StateModifyingFunction"]], "description (libcasm.clexmonte.statemodifyingfunction property)": [[131, "libcasm.clexmonte.StateModifyingFunction.description"]], "function (libcasm.clexmonte.statemodifyingfunction property)": [[132, "libcasm.clexmonte.StateModifyingFunction.function"]], "name (libcasm.clexmonte.statemodifyingfunction property)": [[133, "libcasm.clexmonte.StateModifyingFunction.name"]], "statemodifyingfunctionmap (class in libcasm.clexmonte)": [[134, "libcasm.clexmonte.StateModifyingFunctionMap"]], "items() (libcasm.clexmonte.statemodifyingfunctionmap method)": [[135, "libcasm.clexmonte.StateModifyingFunctionMap.items"]], "keys() (libcasm.clexmonte.statemodifyingfunctionmap method)": [[136, "libcasm.clexmonte.StateModifyingFunctionMap.keys"]], "values() (libcasm.clexmonte.statemodifyingfunctionmap method)": [[137, "libcasm.clexmonte.StateModifyingFunctionMap.values"]], "system (class in libcasm.clexmonte)": [[138, "libcasm.clexmonte.System"]], "basis_set() (libcasm.clexmonte.system method)": [[139, "libcasm.clexmonte.System.basis_set"]], "basis_set_keys (libcasm.clexmonte.system property)": [[140, "libcasm.clexmonte.System.basis_set_keys"]], "canonical_swaps() (libcasm.clexmonte.system method)": [[141, "libcasm.clexmonte.System.canonical_swaps"]], "clex() (libcasm.clexmonte.system method)": [[142, "libcasm.clexmonte.System.clex"]], "clex_keys (libcasm.clexmonte.system property)": [[143, "libcasm.clexmonte.System.clex_keys"]], "composition_calculator (libcasm.clexmonte.system property)": [[144, "libcasm.clexmonte.System.composition_calculator"]], "composition_converter (libcasm.clexmonte.system property)": [[145, "libcasm.clexmonte.System.composition_converter"]], "dof_space() (libcasm.clexmonte.system method)": [[146, "libcasm.clexmonte.System.dof_space"]], "dof_space_keys (libcasm.clexmonte.system property)": [[147, "libcasm.clexmonte.System.dof_space_keys"]], "dof_subspace_keys (libcasm.clexmonte.system property)": [[148, "libcasm.clexmonte.System.dof_subspace_keys"]], "from_dict() (libcasm.clexmonte.system static method)": [[149, "libcasm.clexmonte.System.from_dict"]], "is_basis_set() (libcasm.clexmonte.system method)": [[150, "libcasm.clexmonte.System.is_basis_set"]], "is_clex() (libcasm.clexmonte.system method)": [[151, "libcasm.clexmonte.System.is_clex"]], "is_local_basis_set() (libcasm.clexmonte.system method)": [[152, "libcasm.clexmonte.System.is_local_basis_set"]], "is_local_clex() (libcasm.clexmonte.system method)": [[153, "libcasm.clexmonte.System.is_local_clex"]], "is_local_multiclex() (libcasm.clexmonte.system method)": [[154, "libcasm.clexmonte.System.is_local_multiclex"]], "is_multiclex() (libcasm.clexmonte.system method)": [[155, "libcasm.clexmonte.System.is_multiclex"]], "local_basis_set() (libcasm.clexmonte.system method)": [[156, "libcasm.clexmonte.System.local_basis_set"]], "local_basis_set_keys (libcasm.clexmonte.system property)": [[157, "libcasm.clexmonte.System.local_basis_set_keys"]], "local_clex() (libcasm.clexmonte.system method)": [[158, "libcasm.clexmonte.System.local_clex"]], "local_clex_keys (libcasm.clexmonte.system property)": [[159, "libcasm.clexmonte.System.local_clex_keys"]], "local_multiclex() (libcasm.clexmonte.system method)": [[160, "libcasm.clexmonte.System.local_multiclex"]], "local_multiclex_keys (libcasm.clexmonte.system property)": [[161, "libcasm.clexmonte.System.local_multiclex_keys"]], "make_default_configuration() (libcasm.clexmonte.system method)": [[162, "libcasm.clexmonte.System.make_default_configuration"]], "make_default_state() (libcasm.clexmonte.system method)": [[163, "libcasm.clexmonte.System.make_default_state"]], "multiclex() (libcasm.clexmonte.system method)": [[164, "libcasm.clexmonte.System.multiclex"]], "multiclex_keys (libcasm.clexmonte.system property)": [[165, "libcasm.clexmonte.System.multiclex_keys"]], "n_dimensions (libcasm.clexmonte.system property)": [[166, "libcasm.clexmonte.System.n_dimensions"]], "order_parameter() (libcasm.clexmonte.system method)": [[167, "libcasm.clexmonte.System.order_parameter"]], "order_parameter_subspaces() (libcasm.clexmonte.system method)": [[168, "libcasm.clexmonte.System.order_parameter_subspaces"]], "prim (libcasm.clexmonte.system property)": [[169, "libcasm.clexmonte.System.prim"]], "prim_neighbor_list (libcasm.clexmonte.system property)": [[170, "libcasm.clexmonte.System.prim_neighbor_list"]], "semigrand_canonical_multiswaps() (libcasm.clexmonte.system method)": [[171, "libcasm.clexmonte.System.semigrand_canonical_multiswaps"]], "semigrand_canonical_swaps() (libcasm.clexmonte.system method)": [[172, "libcasm.clexmonte.System.semigrand_canonical_swaps"]], "species_list (libcasm.clexmonte.system property)": [[173, "libcasm.clexmonte.System.species_list"]], "xtal_prim (libcasm.clexmonte.system property)": [[174, "libcasm.clexmonte.System.xtal_prim"]], "enforce_composition() (in module libcasm.clexmonte)": [[175, "libcasm.clexmonte.enforce_composition"]], "make_canonical_initial_state() (in module libcasm.clexmonte)": [[176, "libcasm.clexmonte.make_canonical_initial_state"]], "make_initial_state() (in module libcasm.clexmonte)": [[177, "libcasm.clexmonte.make_initial_state"]], "libcasm.clexmonte.parsing": [[178, "module-libcasm.clexmonte.parsing"]], "optional_from_dict() (in module libcasm.clexmonte.parsing)": [[179, "libcasm.clexmonte.parsing.optional_from_dict"]], "required_array_from_dict() (in module libcasm.clexmonte.parsing)": [[180, "libcasm.clexmonte.parsing.required_array_from_dict"]], "required_from_dict() (in module libcasm.clexmonte.parsing)": [[181, "libcasm.clexmonte.parsing.required_from_dict"]], "required_int_array_from_dict() (in module libcasm.clexmonte.parsing)": [[182, "libcasm.clexmonte.parsing.required_int_array_from_dict"]], "to_dict() (in module libcasm.clexmonte.parsing)": [[183, "libcasm.clexmonte.parsing.to_dict"]], "scale_supercell() (in module libcasm.clexmonte)": [[184, "libcasm.clexmonte.scale_supercell"]]}})